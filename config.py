from sqlalchemy import create_engine, MetaData
from sqlalchemy import Table,Column
from sqlalchemy.sql.sqltypes import Integer,String,Float

engine = create_engine('mysql+pymysql://admin:adminpcm@database-1.ckukv2pwiu3e.us-east-1.rds.amazonaws.com:3306/pea')
meta = MetaData()
db_conn = engine.connect()

assignment=Table('assignment',meta,
    Column('audit_leader', String(255)),
    Column('auditor',String(255)),
    Column('audit_vertical', String(255)),
    Column('region', String(255)),
    Column('month_of_import', String(255)),
    Column('year_of_import', Integer),
    Column('standard_time_taken_for_audit', Integer), 
    Column('date_of_data_ingestion', String(255)),
    Column('no_of_di_asins_to_be_audited', Integer),
    Column('no_of_vostok_asins_to_be_audited', Integer),
    Column('name_of_other_business_verticals', String(255)),
    Column('no_of_other_business_type_asins', Integer),
    Column('no_of_declarations_to_be_audited', Integer),
    Column('no_of_po_to_be_audited', Integer),
    Column('target_date_of_closure_of_audit', String(255)),
    #Column('no_of_asins_to_be_audited', Integer),
)

audit=Table('audit',meta,
    Column('audit_vertical', String(255)),
    Column('region', String(255)),
    Column('month_of_import', String(255)),
    Column('year_of_import', Integer),
    Column('auditor',String(255)),
    Column('date_of_audit_initiated', String(255)),
    Column('audit_complete_date', String(255)),
    Column('audit_time_taken_by_auditor', Integer),
    Column('currency', String(255)),
    Column('overpayment_of_duties', Float),
    Column('overpayment_vostok', Float),
    Column('overpayment_di', Float),
    Column('overpayment_other_business_verticals', Float),
    Column('underpayment_of_duties', Float),
    Column('underpayment_vostok', Float),
    Column('underpayment_di', Float),
    Column('underpayment_other_business_verticals', Float),
    Column('key_audit_findings', String(255)),
    Column('key_issues', String(255)),
    Column('vostok_broker_errors', Integer),
    Column('vostok_beagle_errors', Integer),
    Column('di_broker_errors', Integer),
    Column('di_beagle_errors', Integer),
    Column('other_business_broker_errors', Integer),
    Column('other_business_beagle_errors', Integer),
    Column('broker_error_sim_details', String(255)),
    Column('beagle_error_sim_details', String(255)),
    Column('status',String(255)),
)

quality_audit=Table('quality_audit',meta,
    Column('audit_vertical', String(255)),
    Column('region', String(255)),
    Column('month_of_import', String(255)),
    Column('year_of_import', Integer),
    Column('auditor',String(255)),
    Column('quality_auditor',String(255)),
    Column('status_of_qa', String(255)),
    Column('date_of_sharing_data_with_qa', String(255)),
    Column('qa_remark', String(255)),
    Column('qa_financial_impact', Integer),
    Column('audit_accuracy_before_qa_calibration',Integer),    
    Column('audit_accuracy_after_qa_calibration', Integer),
    Column('delacaration_accuracy_before_qa', Float),
    Column('delacaration_accuracy_after_qa', Float),
)
